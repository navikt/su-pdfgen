name: Bygg og deploy ved push til master

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master

env:
  IMAGE: ghcr.io/${{ github.repository }}/su-pdfgen:${{ github.sha }}

permissions: {}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    permissions:
      packages: 'write'
      contents: 'read'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle.properties', 'settings.gradle.properties', '**/build.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'
      - name: test and build
        run: ./gradlew test build
      - uses: actions/checkout@v4
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker build --pull --tag ${IMAGE} .
          docker push ${IMAGE}

  deploy_to_dev:
    name: Deploy to dev
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # needed for push-image
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: nais.yml

  generate-draft-release:
    name: Generate/update draft release
    runs-on: ubuntu-latest
    permissions:
      contents: 'write' # needed to create/edit releases
      pull-requests: 'write' # needed to add labels to pull requests
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
